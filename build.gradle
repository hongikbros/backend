plugins {
    id 'org.springframework.boot' version '2.4.1'
    id 'io.spring.dependency-management' version '1.0.10.RELEASE'
    id 'org.asciidoctor.convert' version '1.5.8'
    id "com.ewerk.gradle.plugins.querydsl" version "1.0.10"
    id 'java'
}

group = 'com.hongikbros'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '1.8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

ext.profile = (!project.hasProperty('profile') || !profile) ? 'dev' : profile

sourceSets {
    main {
        resources {
            srcDirs "src/main/resources", "src/main/resources-$profile"
        }
    }
    test {
        resources {
            srcDirs "src/test/resources", "src/test/resources-test"
        }
    }
}

dependencies {
    print(project.property('profile'))
    //core
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    runtimeOnly 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.7.1'

    //querydsl
    implementation 'com.querydsl:querydsl-jpa'

    if ("${profile}" == 'dev') {
        implementation 'com.github.gavlyukovskiy:p6spy-spring-boot-starter:1.6.3'
    }
    //db
    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
    //rest-assured
    testImplementation 'io.rest-assured:rest-assured:3.3.0'
    testImplementation 'io.rest-assured:spring-mock-mvc:3.3.0'
    //asciidoctor
    asciidoctor 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    //test
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-inline:2.13.0'
    implementation 'org.mock-server:mockserver-junit-jupiter:5.11.1'
    //jsoup
    implementation 'org.jsoup:jsoup:1.13.1'
}

ext {
    set('snippetsDir', file("build/generated-snippets"))
}

test {
    outputs.dir snippetsDir
    useJUnitPlatform()
}

//querydsl config
def querydslDir = "$buildDir/generated/querydsl"

querydsl {
    jpa = true
    querydslSourcesDir = querydslDir
}
sourceSets {
    main.java.srcDir querydslDir
}
configurations {
    querydsl.extendsFrom compileClasspath
}
compileQuerydsl {
    options.annotationProcessorPath = configurations.querydsl
}

asciidoctor {
    inputs.dir snippetsDir
    dependsOn test
}

bootJar {
    dependsOn asciidoctor
    from("${asciidoctor.outputDir}/html5") {
        into 'static/docs'
    }
}

processResources {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    copy {
        from 'backend-secret'
        include 'application.yml'
        into 'src/main/resources'
    }

    copy {
        from('backend-secret')
        include("resources-${profile}/**")
        into('src/main')
    }
}

processTestResources {
    duplicatesStrategy = DuplicatesStrategy.INHERIT
    copy {
        from('backend-secret')
        include('application-test.yml')
        into('src/test/resources')
        rename('application-test.yml', 'application.yml')
    }

    copy {
        from('backend-secret')
        include('resources-test/**')
        into('src/test')
    }
}